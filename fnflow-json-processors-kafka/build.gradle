/*
NOTE: The plugin set has to be the same in all submodules,
otherwise nativeCompile and other native* tasks will fail
See: https://github.com/graalvm/native-build-tools/issues/572 and https://github.com/gradle/gradle/issues/17559
 */
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.4'
	id 'idea'
	id 'maven-publish'
	id 'org.jreleaser' version '1.17.0'
}

group = 'org.ct42.fnflow'
version = '0.0.6'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.opensearch.client:opensearch-java:2.15.0'
	implementation ('org.opensearch.client:spring-data-opensearch-starter:1.6.1') {
		exclude group: 'org.opensearch.client', module: 'opensearch-rest-high-level-client'
		exclude group: 'org.springframework.data', module: 'spring-data-elasticsearch'
	}
	implementation 'org.ct42.fnflow:fnlib:0.0.4'
	implementation 'org.ct42.fnflow:batchfnlib:0.0.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.opensearch:opensearch-testcontainers:2.1.2'
	testImplementation 'org.testcontainers:kafka'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("bootBuildImage") {
	imageName.set("ct42/fnflow-json-processors-kafka:${version}")
	docker {
		publishRegistry {
			username = "$usr"
			password = "$pwd"
		}
	}
}
